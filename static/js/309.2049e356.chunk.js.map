{"version":3,"file":"static/js/309.2049e356.chunk.js","mappings":"qIAgCA,IAAe,IAA0B,iE,wFC7B5BA,EAAa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACvC,OACE,SAAC,IAAD,CAAOC,QAASC,EAAAA,EAAhB,SACG,SAAAC,GACC,OAAOA,EAAQJ,IAAeC,CAC/B,GAGN,C,0ICRYI,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6FAMdE,EAAiBF,EAAAA,GAAAA,IAAH,uWAOvB,qBAAGG,MAAkBC,MAAMC,UAA3B,IAKA,qBAAGF,MAAkBC,MAAME,UAA3B,IAMA,qBAAGH,MAAkBC,MAAMG,OAA3B,IASSC,EAAaR,EAAAA,GAAAA,EAAH,wMAON,qBAAGG,MAAkBM,WAAWC,IAAhC,IACF,qBAAGP,MAAkBQ,UAAUC,EAA/B,I,6BC/BfC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,IAEtCH,EAAAA,GAAAA,UAAAA,SAAAA,SAAA,kBACKA,EAAAA,GAAAA,UAAAA,SAAAA,SADL,IAEEI,OAAQ,CACNC,SAAS,KAmDb,I,8BAAA,EA/CA,WACE,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAGpBC,GAFUF,EAAAA,EAAAA,IAAYG,EAAAA,IAEHC,QAAO,SAAAC,GAAE,OAAIA,EAAGN,MAAQ,CAAf,IAE5BO,GAAiBC,EAAAA,EAAAA,GAAYR,GAE7BS,EAAO,CACXC,OAAQP,EAASQ,KAAI,SAAAL,GAAE,OAAIA,EAAGM,IAAP,IACvBC,SAAU,CACR,CACEJ,KAAMN,EAASQ,KAAI,SAAAL,GAAE,OAAIA,EAAGN,MAAMc,WAAWC,QAAQ,IAAK,GAArC,IACrBC,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,YAAa,EACbC,OAAQ,QAGZC,QAAS,CACPC,QAAS,CACPtB,OAAQ,CACNC,SAAS,EACTsB,SAAU,aAMlB,OACE,UAACtC,EAAD,YACE,SAACH,EAAD,CAAgB6B,KAAMA,KACtB,UAACpB,EAAD,qBAAekB,OAGpB,E,wCChEYe,EAAUzC,EAAAA,GAAAA,IAAH,+FAChB,qBAAGG,MAAkBC,MAAME,UAA3B,IAqBSoC,GAfiB1C,EAAAA,GAAAA,IAAH,yOACvB,qBAAGG,MAAkBC,MAAME,UAA3B,IAOA,qBAAGH,MAAkBC,MAAMG,OAA3B,IAOmBP,EAAAA,GAAAA,EAAH,qOAMH,qBAAGG,MAAkBM,WAAWC,IAAhC,KAOJiC,EAAU3C,EAAAA,GAAAA,KAAH,uCACT,qBAAGG,MAAkByC,OAAOC,UAA5B,IAGEC,EAAS9C,EAAAA,GAAAA,KAAH,uCACR,qBAAGG,MAAkByC,OAAOG,WAA5B,IAGEC,EAAchD,EAAAA,GAAAA,GAAH,sBAEXiD,EAAYjD,EAAAA,GAAAA,MAAH,2DAKTkD,EAAWlD,EAAAA,GAAAA,GAAH,qUAmBRmD,EAAYnD,EAAAA,GAAAA,GAAH,sKAKA,qBAAGG,MAAkByC,OAAOQ,KAA5B,IAITC,EAAQrD,EAAAA,GAAAA,MAAH,2DAKLsD,EAAQtD,EAAAA,GAAAA,MAAH,mFAMLuD,EAAavD,EAAAA,GAAAA,GAAH,omBAWD,qBAAGG,MAAkByC,OAAOY,UAA5B,IAIL,qBAAGrD,MAAkBsD,MAAMC,OAA3B,IACA,qBAAGvD,MAAkBM,WAAWkD,MAAhC,IAIb,qBAAGxD,MAAkBC,MAAME,UAA3B,IAasB,qBAAGH,MAAkByC,OAAOQ,KAA5B,IAKbQ,EAAc5D,EAAAA,GAAAA,OAAH,0kBAeP,qBAAGG,MAAkBsD,MAAMC,OAA3B,IACA,qBAAGvD,MAAkBM,WAAWkD,MAAhC,IAKb,qBAAGxD,MAAkBC,MAAME,UAA3B,GAMeuD,EAAAA,GAMNC,EAAkB9D,EAAAA,GAAAA,IAAH,0eAIxB,qBAAGG,MAAkBC,MAAME,UAA3B,IAIA,qBAAGH,MAAkBC,MAAMG,OAA3B,GAKEgD,EAMEK,GAaKG,EAAY/D,EAAAA,GAAAA,GAAH,8QAYE,SAAAgE,GAAK,OAAIA,EAAMC,KAAV,ICpLvBC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGItB,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAoJF,I,YAAA,GAjJA,WACE,IAAMuB,GAAU/C,EAAAA,EAAAA,IAAYG,EAAAA,IACtB6C,GAAUhD,EAAAA,EAAAA,IAAYiD,EAAAA,IACtBC,GAASlD,EAAAA,EAAAA,IAAYmD,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAMtD,EAAAA,EAAAA,IAAYuD,EAAAA,IACpBrD,EAAW6C,EAAQ3C,QAAO,SAAAC,GAAE,OAAIA,EAAGN,MAAQ,CAAf,IAE5BG,EAASsD,OAAS,IACpBtD,EAAWA,EAASQ,KAAI,SAACL,EAAIoD,GAAL,eAAC,UACpBpD,GADmB,IAEtBwC,MAAOrB,EAAOiC,IAFQ,KAM1B,OAAoDC,EAAAA,EAAAA,WAAS,GAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAAkDF,EAAAA,EAAAA,WAAS,GAA3D,eAAOG,EAAP,KAA0BC,EAA1B,KAEMC,EAAM,IAAIC,KAEhB,GAA0BN,EAAAA,EAAAA,UAASK,EAAIE,YAAvC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBT,EAAAA,EAAAA,UAASK,EAAIK,eAArC,eAAOC,EAAP,KAAaC,EAAb,KAMA,SAASC,EAAkBC,GACzBL,EAASK,EAAEC,OAAOC,QAAQC,OAC1BC,GACD,CAED,SAASC,EAAiBL,GACxBF,EAAQE,EAAEC,OAAOC,QAAQC,OACzBG,QAAQC,IAAI,MACZC,GACD,CAED,SAASJ,IACPhB,GAAsB,SAAAqB,GAAK,OAAKA,CAAL,IAC3BnB,GAAqB,EACtB,CAED,SAASkB,IACPlB,GAAqB,SAAAmB,GAAK,OAAKA,CAAL,IAC1BrB,GAAsB,EACvB,CAED,OAzBAsB,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,IAAyB,CAAEjB,OAAQA,EAAQ,EAAGG,KAAAA,IACxD,GAAE,CAACjB,EAAUc,EAAOG,EAAMf,KAwBzB,iCACE,UAACjC,EAAD,YACE,UAACqB,EAAD,CAAiB0C,UAAWzB,EAAqB,gBAAkB,GAAnE,WACE,SAACnB,EAAD,CAAa6C,QAAST,EAAtB,SACG9B,EAAOoB,MAEV,UAAC/B,EAAD,CAAYxB,KAAK,QAAjB,WACE,eAAI,aAAW,IAAI0E,QAASd,EAA5B,sBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,uBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,oBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,oBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,kBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,mBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,mBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,qBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,wBAGA,eAAI,aAAW,IAAIc,QAASd,EAA5B,sBAGA,eAAI,aAAW,KAAKc,QAASd,EAA7B,uBAGA,eAAI,aAAW,KAAKc,QAASd,EAA7B,6BAKJ,UAAC7B,EAAD,CAAiB0C,UAAWvB,EAAoB,gBAAkB,GAAlE,WACE,SAACrB,EAAD,CAAa6C,QAASL,EAAtB,SAA2CX,KAC3C,UAAClC,EAAD,CAAYxB,KAAK,OAAjB,WACE,eAAI,aAAW,OAAO0E,QAASR,EAA/B,mBAGA,eAAI,aAAW,OAAOQ,QAASR,EAA/B,mBAGA,eAAI,aAAW,OAAOQ,QAASR,EAA/B,mBAGA,eAAI,aAAW,OAAOQ,QAASR,EAA/B,mBAGA,eAAI,aAAW,OAAOQ,QAASR,EAA/B,4BAMN,UAAC3C,EAAD,YACE,SAACD,EAAD,WACE,UAACF,EAAD,YACE,SAACH,EAAD,wBACA,SAACA,EAAD,uBAGH1B,EAASsD,OAAS,GACjB,SAAC3B,EAAD,UACG3B,EAASQ,KAAI,SAAAL,GAAE,OACd,UAACyB,EAAD,YACE,SAACa,EAAD,CAAWE,MAAOxC,EAAGwC,MAArB,SAA6BxC,EAAGM,QAChC,yBAAKJ,EAAAA,EAAAA,GAAYF,EAAGN,OAAOe,QAAQ,IAAK,QAF3BT,EAAGM,KADJ,MAQlB,OAGJ,UAACW,EAAD,wBACW,SAACC,EAAD,WAAUhB,EAAAA,EAAAA,GAAYyC,GAASlC,QAAQ,IAAK,UAEvD,UAACQ,EAAD,sBACS,SAACI,EAAD,WAASnB,EAAAA,EAAAA,GAAY2C,UAInC,ECpMYoC,GAAa1G,EAAAA,GAAAA,IAAH,wBAEV2G,GAAc3G,EAAAA,GAAAA,IAAH,sFAMX4G,GAAQ5G,EAAAA,GAAAA,GAAH,oUACD,qBAAGG,MAAkBsD,MAAMoD,SAA3B,IACA,qBAAG1G,MAAkBM,WAAWkD,MAAhC,IACF,qBAAGxD,MAAkBQ,UAAUmG,KAA/B,IAIX,qBAAG3G,MAAkBC,MAAME,UAA3B,IAMA,qBAAGH,MAAkBC,MAAMG,OAA3B,IAOSwG,GAAc/G,EAAAA,GAAAA,IAAH,mKAGpB,qBAAGG,MAAkBC,MAAME,UAA3B,IAGA,qBAAGH,MAAkBC,MAAMG,OAA3B,I,WCFJ,OAxBA,WACE,OACE,iCACE,UAACd,GAAA,EAAD,CAAYC,WAAY,YAAxB,WACE,SAACkH,GAAD,0BACA,SAAC,EAAD,KACA,SAAC,GAAD,QAGF,SAACnH,GAAA,EAAD,CAAYC,WAAY,aAAxB,UACE,UAACiH,GAAD,YACE,UAACD,GAAD,YACE,SAACE,GAAD,0BACA,SAAC,EAAD,QAEF,SAACG,GAAD,WACE,SAAC,GAAD,aAMX,C,uBChCM,SAASpF,EAAYqF,GAC1B,IAAMC,EAAMC,OAAOF,GAChBG,eAAe,KAAM,CACpBC,aAAa,IAEdlF,QAAQ,IAAK,KACbmF,MAAM,KACT,GAAIJ,EAAIA,EAAIrC,OAAS,GAAG0C,SAAS,KAAM,CACrC,GAAIL,EAAIA,EAAIrC,OAAS,GAAGA,OAAS,EAE/B,OADAqC,EAAIA,EAAIrC,OAAS,GAAKqC,EAAIA,EAAIrC,OAAS,GAAG2C,MAAM,EAAG,GAC5CN,EAAIO,KAAK,KAElB,GAAmC,IAA/BP,EAAIA,EAAIrC,OAAS,GAAGA,OACtB,OAAOqC,EAAIO,KAAK,KAElB,GAAmC,IAA/BP,EAAIA,EAAIrC,OAAS,GAAGA,OAEtB,OADAqC,EAAIA,EAAIrC,OAAS,GAAKqC,EAAIA,EAAIrC,OAAS,GAAK,IACrCqC,EAAIO,KAAK,IAEnB,CAED,OADAP,EAAIA,EAAIrC,OAAS,GAAKqC,EAAIA,EAAIrC,OAAS,GAAK,MACrCqC,EAAIO,KAAK,IACjB,C","sources":["assets/icons/all_icons/dropdownArrow.svg","components/MediaQuery/MediaQuery.jsx","components/CircleChart/CircleChart.styled.js","components/CircleChart/CircleChart.jsx","components/StatsTable/StatsTable.styled.js","components/StatsTable/StatsTable.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","utils/formatMoney.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L10 10L19 1\",\n    stroke: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdownArrow.5b7a0958806e373fe5b54dde6732e652.svg\";\nexport { ForwardRef as ReactComponent };","import Media from 'react-media';\nimport { device } from '../../assets/styles/theme';\n\nexport const MediaQuery = ({ deviceName, children }) => {\n  return (\n    <Media queries={device}>\n      {matches => {\n        return matches[deviceName] && children;\n      }}\n    </Media>\n  );\n};\n","import styled from 'styled-components';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const StyledDoughnut = styled(Doughnut)`\n  width: 100%;\n  display: flex;\n  flex-direction: column-reverse;\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  display: grid;\n  place-items: center;\n \n\n  width: 100%;\n  ${({ theme }) => theme.media.mobileFrom} {\n    width: 280px;\n    margin-inline: auto;\n  }\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 336px;\n    grid-column: 1 / 2;\n    grid-row: 4 / 5;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 288px;\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n  }\n\n  margin-bottom: 32px;\n`;\n\nexport const ChartLabel = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: -1;\n\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.md};\n  line-height: calc(27 / 18);\n`;\n\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport {\n  selectPeriodTotal,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport {\n  StyledDoughnut,\n  ChartContainer,\n  ChartLabel,\n} from './CircleChart.styled';\nimport { formatMoney } from 'utils/formatMoney';\nimport { useSelector } from 'react-redux';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nChartJS.overrides.doughnut.plugins = {\n  ...ChartJS.overrides.doughnut.plugins,\n  legend: {\n    display: false,\n  },\n};\n\nfunction CircleChart() {\n  const total = useSelector(selectPeriodTotal);\n  const summary = useSelector(selectSummary);\n\n  const expenses = summary.filter(el => el.total < 0);\n\n  const formattedTotal = formatMoney(total);\n\n  const data = {\n    labels: expenses.map(el => el.name),\n    datasets: [\n      {\n        data: expenses.map(el => el.total.toString().replace('-', '')),\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n          '#784fca',\n        ],\n        borderWidth: 0,\n        cutout: '72%',\n      },\n    ],\n    options: {\n      plugins: {\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n      },\n    },\n  };\n\n  return (\n    <ChartContainer>\n      <StyledDoughnut data={data} />\n      <ChartLabel>₴ {formattedTotal}</ChartLabel>\n    </ChartContainer>\n  );\n}\n\nexport default CircleChart;\n","import styled from 'styled-components';\nimport arrow from '../../assets/icons/all_icons/dropdownArrow.svg';\n\nexport const Selects = styled.div`\n  ${({ theme }) => theme.media.tabletFrom} {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  ${({ theme }) => theme.media.tabletFrom} {\n    grid-column: 2 / 3;\n    grid-row: 3 / 4;\n    width: 336px;\n    display: flex;\n    flex-direction: column;\n  }\n  ${({ theme }) => theme.media.desktop} {\n    width: 395px;\n    grid-column: 3 / 4;\n    grid-row: 2 / 5;\n  }\n`;\n\nexport const Summary = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 7px 20px;\n  line-height: calc(24 / 16);\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n\n  &:last-of-type {\n    padding-bottom: 52px;\n  }\n`;\n\nexport const Expense = styled.span`\n  color: ${({ theme }) => theme.colors.accentPink};\n`;\n\nexport const Income = styled.span`\n  color: ${({ theme }) => theme.colors.accentGreen};\n`;\n\nexport const TableHeader = styled.th``;\n\nexport const TableBody = styled.tbody`\n  display: block;\n  width: 100%;\n`;\n\nexport const TableRow = styled.tr`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 14px 20px;\n  width: 100%;\n\n  &::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #dcdcdf;\n  }\n`;\n\nexport const TableHead = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 16px 20px;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 30px;\n`;\n\nexport const THead = styled.thead`\n  display: block;\n  width: 100%;\n`;\n\nexport const Table = styled.table`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n`;\n\nexport const SelectDate = styled.ul`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  overflow: hidden;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding-block: 12px;\n\n  background-color: ${({ theme }) => theme.colors.background};\n  opacity: 0;\n  pointer-events: none;\n\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n\n  transition: opacity 500ms, transform 500ms;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 160px;\n    padding: 13px 20px;\n  }\n\n  & li {\n    cursor: pointer;\n    padding-inline: 20px;\n    padding-block: 4px;\n    transition: background-color 200ms;\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.white};\n    }\n  }\n`;\n\nexport const SelectInput = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  width: 100%;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding: 12px 20px 14px;\n\n  background-color: transparent;\n  cursor: pointer;\n\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: calc(24 / 16);\n\n  transition: border-color 200ms, color 200ms, background-color 200ms;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    padding: 13px 16px;\n    width: 160px;\n  }\n\n  &::after {\n    content: url(${arrow});\n    width: 18px;\n    transition: transform 300ms;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 160px;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 180px;\n  }\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      opacity: 1;\n      transform: translateY(calc(100% - 50px));\n    }\n\n    & ${SelectInput} {\n      border-color: transparent;\n      color: transparent;\n      background-color: transparent;\n\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n\nexport const ColorRect = styled.td`\n  display: flex;\n  align-items: center;\n  max-width: 180px;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    border-radius: 2px;\n    margin-right: 16px;\n    background-color: ${props => props.color};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\nimport {\n  SelectDate,\n  SelectInput,\n  SelectContainer,\n  ColorRect,\n  TableHeader,\n  TableRow,\n  Table,\n  TableHead,\n  TableBody,\n  Summary,\n  Expense,\n  Income,\n  Selects,\n  THead,\n} from './StatsTable.styled';\nimport {\n  selectAllTransactions,\n  selectExpenseSum,\n  selectIncomeSum,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport { formatMoney } from 'utils/formatMoney';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n  '#784fca',\n];\n\nfunction StatsTable() {\n  const summary = useSelector(selectSummary);\n  const expense = useSelector(selectExpenseSum);\n  const income = useSelector(selectIncomeSum);\n  const dispatch = useDispatch();\n  const all = useSelector(selectAllTransactions);\n  let expenses = summary.filter(el => el.total < 0);\n\n  if (expenses.length > 0) {\n    expenses = expenses.map((el, i) => ({\n      ...el,\n      color: colors[i],\n    }));\n  }\n\n  const [monthDropdownShown, setMonthDropdownShown] = useState(false);\n  const [yearDropdownShown, setYearDropdownShown] = useState(false);\n\n  const now = new Date();\n\n  const [month, setMonth] = useState(now.getMonth());\n  const [year, setYear] = useState(now.getFullYear());\n\n  useEffect(() => {\n    dispatch(fetchTransactionsSummary({ month: +month + 1, year }));\n  }, [dispatch, month, year, all]);\n\n  function handleMonthChange(e) {\n    setMonth(e.target.dataset.value);\n    toggleMonthDropdown();\n  }\n\n  function handleYearChange(e) {\n    setYear(e.target.dataset.value);\n    console.log('hi');\n    toggleYearDropdown();\n  }\n\n  function toggleMonthDropdown() {\n    setMonthDropdownShown(state => !state);\n    setYearDropdownShown(false);\n  }\n\n  function toggleYearDropdown() {\n    setYearDropdownShown(state => !state);\n    setMonthDropdownShown(false);\n  }\n\n  return (\n    <>\n      <Selects>\n        <SelectContainer className={monthDropdownShown ? 'dropdownShown' : ''}>\n          <SelectInput onClick={toggleMonthDropdown}>\n            {months[month]}\n          </SelectInput>\n          <SelectDate name=\"month\">\n            <li data-value=\"0\" onClick={handleMonthChange}>\n              January\n            </li>\n            <li data-value=\"1\" onClick={handleMonthChange}>\n              February\n            </li>\n            <li data-value=\"2\" onClick={handleMonthChange}>\n              March\n            </li>\n            <li data-value=\"3\" onClick={handleMonthChange}>\n              April\n            </li>\n            <li data-value=\"4\" onClick={handleMonthChange}>\n              May\n            </li>\n            <li data-value=\"5\" onClick={handleMonthChange}>\n              June\n            </li>\n            <li data-value=\"6\" onClick={handleMonthChange}>\n              July\n            </li>\n            <li data-value=\"7\" onClick={handleMonthChange}>\n              August\n            </li>\n            <li data-value=\"8\" onClick={handleMonthChange}>\n              September\n            </li>\n            <li data-value=\"9\" onClick={handleMonthChange}>\n              October\n            </li>\n            <li data-value=\"10\" onClick={handleMonthChange}>\n              November\n            </li>\n            <li data-value=\"11\" onClick={handleMonthChange}>\n              December\n            </li>\n          </SelectDate>\n        </SelectContainer>\n        <SelectContainer className={yearDropdownShown ? 'dropdownShown' : ''}>\n          <SelectInput onClick={toggleYearDropdown}>{year}</SelectInput>\n          <SelectDate name=\"year\">\n            <li data-value=\"2019\" onClick={handleYearChange}>\n              2019\n            </li>\n            <li data-value=\"2020\" onClick={handleYearChange}>\n              2020\n            </li>\n            <li data-value=\"2021\" onClick={handleYearChange}>\n              2021\n            </li>\n            <li data-value=\"2022\" onClick={handleYearChange}>\n              2022\n            </li>\n            <li data-value=\"2023\" onClick={handleYearChange}>\n              2023\n            </li>\n          </SelectDate>\n        </SelectContainer>\n      </Selects>\n      <Table>\n        <THead>\n          <TableHead>\n            <TableHeader>Category</TableHeader>\n            <TableHeader>Sum</TableHeader>\n          </TableHead>\n        </THead>\n        {expenses.length > 0 ? (\n          <TableBody>\n            {expenses.map(el => (\n              <TableRow key={el.name}>\n                <ColorRect color={el.color}>{el.name}</ColorRect>\n                <td>{formatMoney(el.total).replace('-', '')}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        ) : (\n          ''\n        )}\n      </Table>\n      <Summary>\n        Expenses:<Expense>{formatMoney(expense).replace('-', '')}</Expense>\n      </Summary>\n      <Summary>\n        Income:<Income>{formatMoney(income)}</Income>\n      </Summary>\n    </>\n  );\n}\n\nexport default StatsTable;\n","import styled from 'styled-components';\n\nexport const LeftColumn = styled.div``;\n\nexport const StatsTablet = styled.div`\n  display: flex;\n  gap: 32px;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  margin-bottom: 8px;\n  margin-top: 40px;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    margin-top: 0;\n    margin-bottom: 20px;\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n  }\n  ${({ theme }) => theme.media.desktop} {\n    grid-column: 2 / 3;\n    grid-row: 1 / 2;\n    margin-top: 32px;\n  }\n`;\n\nexport const TabletStats = styled.div`\n  grid-column: 2 / 3;\n  grid-row: 3 / 7;\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 336px;\n  }\n  ${({ theme }) => theme.media.desktop} {\n    grid-column: 3 / 4;\n    grid-row: 2 / 7;\n  }\n`;\n","import CircleChart from 'components/CircleChart/CircleChart';\nimport StatsTable from 'components/StatsTable/StatsTable';\nimport {\n  Title,\n  TabletStats,\n  LeftColumn,\n  StatsTablet,\n} from './Statistics.styled';\nimport { MediaQuery } from 'components/MediaQuery/MediaQuery';\n\nfunction Statistics() {\n  return (\n    <>\n      <MediaQuery deviceName={'mobileAll'}>\n        <Title>Statistics</Title>\n        <CircleChart />\n        <StatsTable />\n      </MediaQuery>\n\n      <MediaQuery deviceName={'tabletFrom'}>\n        <StatsTablet>\n          <LeftColumn>\n            <Title>Statistics</Title>\n            <CircleChart />\n          </LeftColumn>\n          <TabletStats>\n            <StatsTable />\n          </TabletStats>\n        </StatsTablet>\n      </MediaQuery>\n    </>\n  );\n}\n\nexport default Statistics;\n","export function formatMoney(num) {\n  const arr = Number(num)\n    .toLocaleString('en', {\n      useGrouping: true,\n    })\n    .replace(',', ' ')\n    .split(' ');\n  if (arr[arr.length - 1].includes('.')) {\n    if (arr[arr.length - 1].length > 6) {\n      arr[arr.length - 1] = arr[arr.length - 1].slice(0, 6);\n      return arr.join(' ');\n    }\n    if (arr[arr.length - 1].length === 6) {\n      return arr.join(' ');\n    }\n    if (arr[arr.length - 1].length === 5) {\n      arr[arr.length - 1] = arr[arr.length - 1] + '0';\n      return arr.join(' ');\n    }\n  }\n  arr[arr.length - 1] = arr[arr.length - 1] + '.00';\n  return arr.join(' ');\n}\n"],"names":["MediaQuery","deviceName","children","queries","device","matches","StyledDoughnut","styled","Doughnut","ChartContainer","theme","media","mobileFrom","tabletFrom","desktop","ChartLabel","fontWeight","bold","fontSizes","md","ChartJS","ArcElement","Tooltip","Legend","legend","display","total","useSelector","selectPeriodTotal","expenses","selectSummary","filter","el","formattedTotal","formatMoney","data","labels","map","name","datasets","toString","replace","backgroundColor","borderWidth","cutout","options","plugins","position","Selects","Summary","Expense","colors","accentPink","Income","accentGreen","TableHeader","TableBody","TableRow","TableHead","white","THead","Table","SelectDate","background","fonts","primary","normal","SelectInput","arrow","SelectContainer","ColorRect","props","color","months","summary","expense","selectExpenseSum","income","selectIncomeSum","dispatch","useDispatch","all","selectAllTransactions","length","i","useState","monthDropdownShown","setMonthDropdownShown","yearDropdownShown","setYearDropdownShown","now","Date","getMonth","month","setMonth","getFullYear","year","setYear","handleMonthChange","e","target","dataset","value","toggleMonthDropdown","handleYearChange","console","log","toggleYearDropdown","state","useEffect","fetchTransactionsSummary","className","onClick","LeftColumn","StatsTablet","Title","secondary","title","TabletStats","num","arr","Number","toLocaleString","useGrouping","split","includes","slice","join"],"sourceRoot":""}