{"version":3,"file":"static/js/329.dc3bc7fe.chunk.js","mappings":"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","sources":["assets/icons/all_icons/dropdownArrow.svg","webpack://react-team-project/./src/components/HomeTab/HomeTab.module.css?15f0","components/HomeTab/HomeTab.jsx","components/Navigation/Navigation.jsx","components/MediaQuery/MediaQuery.jsx","components/ModalLogout/ModalLogout.styled.js","components/ModalLogout/ModalLogout.jsx","components/Header/Header.jsx","components/AddTransactionBtn/AddTransactionBtn.styled.js","components/AddTransactionBtn/AddTransactionBtn.jsx","webpack://react-team-project/./src/components/AddTransactionForm/AddTransactionForm.module.css?c763","components/DropdownMenu/DropdownMenu.styled.js","components/DropdownMenu/DropdownMenu.jsx","components/AddTransactionForm/AddTransactionForm.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L10 10L19 1\",\n    stroke: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdownArrow.5b7a0958806e373fe5b54dde6732e652.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomeTab_container__kwGJf\",\"table\":\"HomeTab_table__16Nol\",\"thead\":\"HomeTab_thead__LEuRp\",\"tr\":\"HomeTab_tr__X80Hh\",\"profit\":\"HomeTab_profit__ru0L2\",\"lose\":\"HomeTab_lose__ngBoF\"};","import s from './HomeTab.module.css';\n\nexport default function HomeTab() {\n  return (\n   <div className={s.container}>\n      <table className={s.table}>\n        <thead className={s.thead}>\n          <tr className={s.tr}>\n            <th className={s.border__start}>Дата</th>\n            <th>Тип</th>\n            <th>Категорія</th>\n            <th>Комментар</th>\n            <th>Сумма</th>\n            <th>Баланс</th>\n          </tr>\n        </thead>\n        <tbody className={s.tbody}>\n          (\n            <tr key={1} className={s.tr}>\n              <td>Дата транзакції</td>\n              <td>+</td>\n              <td>Категорія</td>\n              <td>Комментар</td>\n              <td>0</td>\n              <td>0</td>\n            </tr>)\n            </tbody>\n            </table>\n            </div>\n          );\n}\n","import { NavLink } from 'react-router-dom';\n\nexport default function Navigation() {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <NavLink to=\"home\">Home</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"statistics\">Statistics</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"currency\">Currency for mobile version</NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import Media from 'react-media';\nimport { device } from '../../assets/styles/theme';\n\nexport const MediaQuery = ({ deviceName, children }) => {\n  return (\n    <Media queries={device}>\n      {matches => {\n        return matches[deviceName] && children;\n      }}\n    </Media>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: 100vw;\n  max-height: 100vh;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(8)};\n  min-width: 100vw;\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-right: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n  padding-top: ${({ theme }) => theme.spacing(4)};\n  padding-bottom: ${({ theme }) => theme.spacing(4)};\n  ${({ theme }) => theme.media.mobileFrom} {\n    min-width: ${({ theme }) => theme.spacing(100)};\n    max-width: ${({ theme }) => theme.spacing(130)};\n    min-height: ${({ theme }) => theme.spacing(80)};\n    border-radius: ${({ theme }) => theme.spacing(5)};\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.lg};\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { signOut } from 'redux/auth/operations';\nimport { toggleModalLogoutOpen } from 'redux/global/globalSlice';\nimport { ModalWindow, Overlay, Box, Text } from './ModalLogout.styled';\nimport Button from 'components/Button/Button';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalLogout = ({ type, handleClick, hasAccent }) => {\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      dispatch(toggleModalLogoutOpen());\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        dispatch(toggleModalLogoutOpen());\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch]);\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <Box>\n          <Text>Are you sure you want to leave?</Text>\n          <Button\n            content={'Yes'}\n            hasAccent={true}\n            type=\"button\"\n            onClick={() => {\n              dispatch(toggleModalLogoutOpen());\n              dispatch(signOut());\n            }}\n          />\n          <Button\n            content={'No'}\n            type=\"button\"\n            onClick={() => {\n              dispatch(toggleModalLogoutOpen());\n            }}\n          />\n        </Box>\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import sprite from '../../assets/icons/sprite.svg';\nimport { MediaQuery } from 'components/MediaQuery/MediaQuery';\nimport {\n  HeaderMain,\n  Container,\n  NavItem,\n  LogoIcon,\n  LogoText,\n  Wrapper,\n  Name,\n  Button,\n  ExitIcon,\n  ExitText,\n} from './Header.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n// import { signOut } from 'redux/auth/operations';\nimport {\n  selectModalLogoutOpen,\n  toggleModalLogoutOpen,\n} from 'redux/global/globalSlice';\nimport { ModalLogout } from 'components/ModalLogout/ModalLogout';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  const isModalLogoutOpen = useSelector(selectModalLogoutOpen);\n\n  console.log(isModalLogoutOpen);\n  // const handleClickSignOut = () => {\n  //   dispatch(signOut());\n  // };\n\n  const handleModalLogoutOpen = () => {\n    dispatch(toggleModalLogoutOpen());\n  };\n\n  const selectUsername = state => state.auth?.user?.username;\n  const username = useSelector(selectUsername);\n\n  console.log(username);\n\n  return (\n    <>\n      <HeaderMain>\n        <Container>\n          <NavItem to=\"home\">\n            <LogoIcon>\n              <use href={sprite + '#icon-wallet'}></use>\n            </LogoIcon>\n            <LogoText>Wallet</LogoText>\n          </NavItem>\n          <Wrapper>\n            <Name>{username}</Name>\n            <Button type=\"button\" onClick={handleModalLogoutOpen}>\n              <ExitIcon>\n                <use href={sprite + '#icon-exit'}></use>\n              </ExitIcon>\n              <MediaQuery deviceName={'tabletFrom'}>\n                <ExitText>Exit</ExitText>\n              </MediaQuery>\n            </Button>\n          </Wrapper>\n        </Container>\n        {isModalLogoutOpen && <ModalLogout />}\n      </HeaderMain>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nconst setBgColor = props => (props.hasAccent ? `#24CCA7` : `#ffffff`);\n\nconst setColor = props => (props.hasAccent ? `#ffffff` : `#4A56E2`);\n\nconst setBorder = props => (props.hasAccent ? `#24CCA7` : `#4A56E2`);\n\nexport const RoundBtn = styled.button`\n  position: fixed;\n  bottom: ${({ theme }) => theme.spacing(5)};\n  right: ${({ theme }) => theme.spacing(5)};\n\n  display: inline-block;\n  text-transform: uppercase;\n  line-height: 1.5;\n  font-size: ${({ theme }) => theme.fontSizes.md};\n  width: ${({ theme }) => theme.spacing(11)};\n  height: ${({ theme }) => theme.spacing(11)};\n  /* min-width: ${({ theme }) => theme.spacing(70)};\n  max-width: ${({ theme }) => theme.spacing(75)}; */\n  background-color: ${setBgColor};\n  color: ${setColor};\n  border: 1px solid ${setBorder};\n  /* border-radius: ${({ theme }) => theme.spacing(5)}; */\n  border-radius: 50%;\n  /* padding-right: ${({ theme }) => theme.spacing(3)};\n  padding-left: ${({ theme }) => theme.spacing(3)};\n  padding-top: ${({ theme }) => theme.spacing(3)};\n  padding-bottom: ${({ theme }) => theme.spacing(3)}; */\n  transition: all ${({ theme }) => theme.animation.cubicBezier} 0s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.regular};\n  }\n  ${({ theme }) => theme.media.mobileFrom} {\n    bottom: ${({ theme }) => theme.spacing(10)};\n    right: ${({ theme }) => theme.spacing(10)};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { toggleModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { RoundBtn } from './AddTransactionBtn.styled';\n\nexport default function AddTransactionBtn() {\n  const dispatch = useDispatch();\n\n  const handleModalAddTransactionOpen = () => {\n    dispatch(toggleModalAddTransactionOpen());\n  };\n\n  return (\n    <RoundBtn\n      type=\"button\"\n      hasAccent={true}\n      onClick={handleModalAddTransactionOpen}\n    >\n      +\n    </RoundBtn>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddTransactionForm_wrapper__x6FM7\",\"form\":\"AddTransactionForm_form__hkRoK\",\"formTitle\":\"AddTransactionForm_formTitle__r-hm1\",\"formInput\":\"AddTransactionForm_formInput__KJzAq\",\"inputLabel\":\"AddTransactionForm_inputLabel__XPWC+\",\"inputIcon\":\"AddTransactionForm_inputIcon__Ql-XJ\",\"amountDateWrapper\":\"AddTransactionForm_amountDateWrapper__FF5il\"};","import styled from 'styled-components';\nimport arrow from '../../assets/icons/all_icons/dropdownArrow.svg';\n\nexport const SelectDate = styled.ul`\n  width: 100%;\n\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  overflow: hidden;\n\n  border-radius: 20px;\n  border: 1px solid black;\n  padding-block: 12px;\n\n  /* background-color: ${({ theme }) => theme.colors.background}; */\n  opacity: 0;\n  pointer-events: none;\n\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n\n  transition: opacity 500ms, transform 500ms;\n\n  /* copy */\n  border: none;\n  background-color: rgba(255, 255, 255, 0.7);\n  box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(25px);\n  /* copy */\n\n  & li {\n    cursor: pointer;\n    padding-inline: 20px;\n    padding-block: 4px;\n    /* transition: background-color 200ms; */\n    background-color: transparent;\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.white};\n      color: ${({ theme }) => theme.colors.accentPink};\n    }\n  }\n`;\n\nexport const SelectInput = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  width: 100%;\n\n  /* border-radius: 30px; */\n  border: 1px solid black;\n  padding: 12px 20px 14px;\n\n  /* background-color: ${({ theme }) => theme.colors.background}; */\n  cursor: pointer;\n\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: calc(24 / 16);\n  /* copy */\n  width: 100%;\n  padding: 0 8px 7px 52px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  outline: none;\n  color: #bdbdbd;\n  /* copy */\n  transition: border-color 200ms, color 200ms, background-color 200ms;\n\n  &::after {\n    content: url(${arrow});\n    width: 18px;\n    transition: transform 300ms;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n  width: 394px;\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      opacity: 1;\n      transform: translateY(calc(100% - 50px));\n    }\n\n    & ${SelectInput} {\n      border-color: transparent;\n      color: transparent;\n      background-color: transparent;\n\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n\n// export const ColorRect = styled.td`\n//   &::before {\n//     content: '';\n//     display: inline-block;\n//     width: 24px;\n//     height: 24px;\n//     background-color: ${props => props.color};\n//   }\n// `;\n","import { useState } from 'react';\nimport {\n  SelectDate,\n  SelectInput,\n  SelectContainer,\n} from './DropdownMenu.styled';\n\nconst categories = ['Select a category'];\n\nexport default function DropdownMenu({ expenseCategories, handleDropDown }) {\n  expenseCategories.map(({ id, name }) => {\n    categories.push(name);\n    return null;\n  });\n\n  //   const dispatch = useDispatch();\n\n  const [categoryDropdownShown, setCategoryDropdownShown] = useState(false);\n\n  const [category, setCategory] = useState(0);\n  //   const [categoryId, setCategoryId] = useState('');\n\n  //   useEffect(() => {\n  //     dispatch(fetchTransactionsSummary({ category: +category + 1, year }));\n  //   }, [dispatch, category, year]);\n\n  function handleCategoryChange(e) {\n    setCategory(e.target.dataset.idx);\n    handleDropDown(e.target.dataset.id);\n    toggleCategoryDropdown();\n  }\n\n  function toggleCategoryDropdown() {\n    setCategoryDropdownShown(state => !state);\n  }\n\n  return (\n    <SelectContainer className={categoryDropdownShown ? 'dropdownShown' : ''}>\n      <SelectInput type=\"button\" onClick={toggleCategoryDropdown}>\n        {categories[category]}\n      </SelectInput>\n      <SelectDate name=\"category\" onClick={handleCategoryChange}>\n        {expenseCategories.map(({ id, name }, idx) => (\n          <li key={id} data-idx={idx + 1} data-id={id}>\n            {name}\n          </li>\n        ))}\n        {/* <li data-value=\"0\">January</li> */}\n      </SelectDate>\n    </SelectContainer>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@chakra-ui/react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { addTransaction } from 'redux/transactions/operations';\nimport { selectCategories } from 'redux/transactions/transactionsSlice';\nimport Button from 'components/Button/Button';\n\nimport css from './AddTransactionForm.module.css';\nimport { toggleModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport DropdownMenu from 'components/DropdownMenu/DropdownMenu';\n\nconst initialValues = {\n  transactionDate: '',\n  // categoryId: '',\n  comment: '',\n  amount: '',\n};\n\nconst schema = yup.object().shape({\n  // categoryId: yup.string().required('Pls select category'),\n  amount: yup.number().required().positive().integer(),\n  comment: yup.string().min(2),\n  transactionDate: yup.date().required(),\n});\n\nexport const AddTransactionForm = () => {\n  const categories = useSelector(selectCategories);\n  const expenseCategories = categories.filter(el => el.type !== 'INCOME');\n  const incomeCategories = categories.filter(el => el.type === 'INCOME');\n  const incomeCategoriesId = incomeCategories.map(el => {\n    return el.id;\n  });\n\n  // SWITCH TRANSACTION TYPE====================================================\n  const [isIncomeTransaction, setIsIncomeTransaction] = useState(true);\n  const [categoryIdFromDropdown, SetCategoryIdFromDropdown] = useState('');\n  console.log('categoryIdFromDropdown:', categoryIdFromDropdown);\n\n  const toggleTransactionType = () => {\n    setIsIncomeTransaction(isIncomeTransaction => !isIncomeTransaction);\n  };\n  // ====================================================\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    if (isIncomeTransaction) {\n      values.type = 'INCOME';\n      values.categoryId = incomeCategoriesId[0];\n    } else {\n      values.amount = -values.amount;\n      values.type = 'EXPENSE';\n      categoryIdFromDropdown\n        ? (values.categoryId = categoryIdFromDropdown)\n        : (values.categoryId = expenseCategories[8].id);\n    }\n\n    console.log(values);\n    dispatch(addTransaction(values));\n    dispatch(toggleModalAddTransactionOpen());\n    actions.resetForm();\n  };\n\n  const handleDropDown = categoryId => {\n    SetCategoryIdFromDropdown(categoryId);\n  };\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.formTitle}>Add transaction</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <div>\n            <label htmlFor=\"transactionType\">Income</label>\n            <Switch\n              onChange={toggleTransactionType}\n              id=\"transactionType\"\n              size=\"lg\"\n              colorScheme=\"green\"\n              name=\"transactionType\"\n            />\n            <label>Expense</label>\n          </div>\n          {!isIncomeTransaction && (\n            <>\n              <label className={css.inputLabel}>\n                {/* <Field\n                  className={css.formInput}\n                  as=\"select\"\n                  name=\"categoryId\"\n                  placeholder=\"Select a category\"\n                >\n                  {expenseCategories.map(({ id, name }) => (\n                    <option key={id} value={id}>\n                      {name}\n                    </option>\n                  ))}\n                </Field>\n                <ErrorMessage name=\"categoryId\" component=\"div\" /> */}\n              </label>\n              <DropdownMenu\n                expenseCategories={expenseCategories}\n                handleDropDown={handleDropDown}\n              />\n            </>\n          )}\n\n          <div className={css.amountDateWrapper}>\n            <label className={css.inputLabel}>\n              <Field\n                className={css.formInput}\n                type=\"text\"\n                name=\"amount\"\n                placeholder=\"0.00\"\n              />\n              <ErrorMessage name=\"amount\" component=\"div\" />\n            </label>\n            <label className={css.inputLabel}>\n              <Field\n                className={css.formInput}\n                type=\"date\"\n                name=\"transactionDate\"\n              />\n              <ErrorMessage name=\"transactionDate\" component=\"div\" />\n            </label>\n          </div>\n          <label className={css.inputLabel}>\n            <Field\n              className={css.formInput}\n              type=\"text\"\n              name=\"comment\"\n              placeholder=\"Comment\"\n            />\n            <ErrorMessage name=\"comment\" component=\"div\" />\n          </label>\n\n          <Button type=\"submit\" content={'add'} hasAccent={true} />\n        </Form>\n      </Formik>\n\n      <Button\n        type=\"button\"\n        content={'cancel'}\n        onClick={() => {\n          dispatch(toggleModalAddTransactionOpen());\n        }}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: 100vw;\n  max-height: 100vh;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(8)};\n  min-width: 100vw;\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-right: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n  padding-top: ${({ theme }) => theme.spacing(4)};\n  padding-bottom: ${({ theme }) => theme.spacing(4)};\n  ${({ theme }) => theme.media.mobileFrom} {\n    min-width: ${({ theme }) => theme.spacing(100)};\n    max-width: ${({ theme }) => theme.spacing(130)};\n    min-height: ${({ theme }) => theme.spacing(80)};\n    border-radius: ${({ theme }) => theme.spacing(5)};\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.lg};\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\n// import { signOut } from 'redux/auth/operations';\nimport {\n  toggleModalAddTransactionOpen,\n  // toggleModalLogoutOpen,\n} from 'redux/global/globalSlice';\n\nimport { AddTransactionForm } from 'components/AddTransactionForm/AddTransactionForm';\n\nimport {\n  ModalWindow,\n  Overlay,\n  // Box, Text\n} from './Modal.styled';\n// import Button from 'components/Button/Button';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ type, handleClick, hasAccent }) => {\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      // dispatch(toggleModalLogoutOpen());\n      dispatch(toggleModalAddTransactionOpen());\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        // dispatch(toggleModalLogoutOpen());\n        dispatch(toggleModalAddTransactionOpen());\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch]);\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <AddTransactionForm />\n      </ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import { Outlet } from 'react-router';\nimport { Suspense, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport HomeTab from 'components/HomeTab/HomeTab';\nimport Loader from 'components/Loader/Loader';\nimport Navigation from 'components/Navigation/Navigation';\nimport { Container } from 'components/Container/Container.styled';\nimport { Header } from 'components/Header/Header';\nimport AddTransactionBtn from 'components/AddTransactionBtn/AddTransactionBtn';\nimport { useSelector } from 'react-redux';\nimport { selectModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { Modal } from 'components/Modal/Modal';\n\nimport { getAllTransactions } from 'redux/transactions/operations';\n\nexport default function DashboardPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTransactions());\n  }, [dispatch]);\n  \n  const isModalAddTransactionOpen = useSelector(selectModalAddTransactionOpen);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <h1>DashboardPage</h1>\n        <HomeTab />\n        <Navigation />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <AddTransactionBtn />\n      </Container>\n      {isModalAddTransactionOpen && <Modal />}\n    </>\n  );\n}\n"],"names":["HomeTab","className","s","Navigation","to","MediaQuery","deviceName","children","queries","device","matches","Overlay","styled","ModalWindow","Box","theme","spacing","colors","white","media","mobileFrom","Text","fonts","secondary","fontWeight","bold","fontSizes","lg","modalRoot","document","querySelector","ModalLogout","type","handleClick","hasAccent","dispatch","useDispatch","useEffect","handleKeyDown","event","code","toggleModalLogoutOpen","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","Button","content","signOut","Header","isModalLogoutOpen","useSelector","selectModalLogoutOpen","console","log","username","state","auth","user","href","sprite","RoundBtn","md","props","animation","cubicBezier","shadows","regular","AddTransactionBtn","toggleModalAddTransactionOpen","SelectDate","background","primary","normal","accentPink","SelectInput","arrow","SelectContainer","categories","DropdownMenu","expenseCategories","handleDropDown","map","id","name","push","useState","categoryDropdownShown","setCategoryDropdownShown","category","setCategory","toggleCategoryDropdown","e","dataset","idx","initialValues","transactionDate","comment","amount","schema","yup","shape","required","positive","integer","min","AddTransactionForm","selectCategories","filter","el","incomeCategoriesId","isIncomeTransaction","setIsIncomeTransaction","categoryIdFromDropdown","SetCategoryIdFromDropdown","css","validationSchema","onSubmit","values","actions","categoryId","addTransaction","resetForm","htmlFor","onChange","size","colorScheme","placeholder","component","Modal","DashboardPage","getAllTransactions","isModalAddTransactionOpen","selectModalAddTransactionOpen","Suspense","fallback","Loader"],"sourceRoot":""}