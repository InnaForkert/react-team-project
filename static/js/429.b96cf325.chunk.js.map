{"version":3,"file":"static/js/429.b96cf325.chunk.js","mappings":"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","sources":["redux/transactions/selectors.js","components/HomeTab/HomeTab.styled.js","components/HomeTab/HomeTab.jsx","components/MediaQuery/MediaQuery.jsx","utils/formatMoney.js"],"sourcesContent":["import { selectAllTransactions } from \"./transactionsSlice\"\nimport { selectFilteredValue } from \"./transactionsSlice\"\n\nexport const selectFilteredTransactions = state => {\n  const transactions = selectAllTransactions(state)\n  const filteredValues = selectFilteredValue(state)\n  let sortedTransactions = [...transactions];\n\n  if(filteredValues) {\n    Object.keys(filteredValues).forEach(property => {\n      const value = filteredValues[property]\n      if(property === 'transactionDate' && value !== ''){\n        sortedTransactions = sortedTransactions.filter((transaction) => new Date(transaction[property]).getMonth() === Number(filteredValues[property]))\n      }\n\n      if(property === 'comment' && value){\n        sortedTransactions = sortedTransactions.filter(transaction => transaction[property].toLowerCase().trim().includes(filteredValues[property].toLowerCase().trim()))\n      }\n\n      if(property === 'amount' && value){\n        if(filteredValues[property] === 'low'){\n        sortedTransactions =  sortedTransactions.sort((prevTransaction, nextTransaction) => prevTransaction[property] - nextTransaction[property])\n          }\n        else if(filteredValues[property] === 'high') {\n          sortedTransactions =  sortedTransactions.sort((prevTransaction, nextTransaction) => nextTransaction[property] - prevTransaction[property])\n        }\n      }\n\n      if((property === 'type' || property === 'categoryId') && value){\n        sortedTransactions = sortedTransactions.filter(transaction => transaction[property] === filteredValues[property])\n      }\n    })\n    }\n    return sortedTransactions\n  }\n","import styled from 'styled-components';\n\nexport const TransactionDetails = styled.ul`\n  border-radius: 10px;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 8px;\n`;\n\nexport const TransactionDetailsItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 12px 20px 8px;\n  font-size: 18px;\n  border-left: 5px solid ${props => props.color};\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #dcdcdf;\n  }\n`;\n\nexport const TransactionDetailsItemTitle = styled.p`\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n`;\n\nexport const SumText = styled.span`\n  color: ${props => props.color};\n`;\n\nexport const Table = styled.table`\n  display: block;\n  width: 100%;\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 715px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  display: block;\n  width: 100%;\n`;\n\nexport const TableHead = styled.tr`\n  display: grid;\n  grid-template-columns: 1.8fr 1.2fr 2.2fr 2.2fr 1.4fr 1.4fr;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: 16px 20px;\n  border-radius: 30px;\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: 18px;\n`;\n\nexport const TableHeader = styled.th`\n  &.alignRight {\n    text-align: right;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  position: relative;\n\n  padding: 16px 20px;\n\n  display: grid;\n  grid-template-columns: 1.8fr 1.2fr 2.2fr 2.2fr 1.4fr 1.4fr;\n  width: 100%;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #dcdcdf;\n  }\n`;\n\nexport const Sum = styled.td`\n  text-align: right;\n  color: ${props => props.color};\n`;\n\nexport const Balance = styled.td`\n  text-align: right;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectCategories } from 'redux/transactions/transactionsSlice';\nimport { filteredValue } from 'redux/transactions/transactionsSlice';\nimport { selectFilteredTransactions } from 'redux/transactions/selectors';\n\nimport {\n  TransactionDetails,\n  TransactionDetailsItem,\n  TransactionDetailsItemTitle,\n  SumText,\n  TableHead,\n  TableHeader,\n  TableBody,\n  Table,\n  TableRow,\n  Balance,\n  Sum,\n} from './HomeTab.styled';\nimport { formatMoney } from 'utils/formatMoney';\nimport { MediaQuery } from 'components/MediaQuery/MediaQuery';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n];\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function HomeTab() {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectFilteredTransactions);\n  const all = [...transactions].reverse();\n  const categories = useSelector(selectCategories);\n  const { transactionDate, amount, comment, type, categoryId } = useSelector(\n    state => state.transactions.filteredValue\n  );\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    dispatch(filteredValue({ [name]: value }));\n  };\n\n  return (\n    <>\n      <MediaQuery deviceName={'mobileAll'}>\n        {all.length > 0 && categories.length > 0\n          ? all.map((el, i) => (\n              <TransactionDetails key={el.id}>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>\n                    Date\n                  </TransactionDetailsItemTitle>\n                  {new Date(el.transactionDate)\n                    .toLocaleDateString()\n                    .replace(/\\//g, '.')}\n                </TransactionDetailsItem>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>\n                    Type\n                  </TransactionDetailsItemTitle>\n                  {el.type[0] + el.type.slice(1).toLowerCase()}\n                </TransactionDetailsItem>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>\n                    Category\n                  </TransactionDetailsItemTitle>\n                  {categories.find(e => e.id === el.categoryId).name}\n                </TransactionDetailsItem>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>\n                    Comment\n                  </TransactionDetailsItemTitle>\n                  {el.comment}\n                </TransactionDetailsItem>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>Sum</TransactionDetailsItemTitle>\n                  <SumText color={colors[i < 9 ? i : i % 9]}>\n                    {formatMoney(el.amount).replace('-', '')}\n                  </SumText>\n                </TransactionDetailsItem>\n                <TransactionDetailsItem color={colors[i < 9 ? i : i % 9]}>\n                  <TransactionDetailsItemTitle>\n                    Balance\n                  </TransactionDetailsItemTitle>\n                  {formatMoney(el.balanceAfter).replace('-', '')}\n                </TransactionDetailsItem>\n              </TransactionDetails>\n            ))\n          : ''}\n      </MediaQuery>\n      <MediaQuery deviceName={'tabletFrom'}>\n        <Table>\n          <TableBody>\n            <TableHead>\n              <TableHeader>\n                <FormControl\n                  variant=\"standard\"\n                  sx={{\n                    m: 1,\n                    minWidth: 80,\n                  }}\n                >\n                  <InputLabel id=\"demo-simple-select-standard-label\">\n                    Date\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-standard-label\"\n                    id=\"transactionDate\"\n                    name=\"transactionDate\"\n                    value={transactionDate}\n                    onChange={handleChange}\n                    label=\"Date\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    {months.map((month, ind) => (\n                      <MenuItem key={month} value={ind}>\n                        {month}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </TableHeader>\n              <TableHeader>\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 60 }}>\n                  <InputLabel id=\"demo-simple-select-standard-label\">\n                    Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-standard-label\"\n                    id=\"type\"\n                    name=\"type\"\n                    value={type}\n                    onChange={handleChange}\n                    label=\"Type\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value=\"INCOME\">Income</MenuItem>\n                    <MenuItem value=\"EXPENSE\">Expense</MenuItem>\n                  </Select>\n                </FormControl>\n              </TableHeader>\n              <TableHeader>\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 130 }}>\n                  <InputLabel id=\"demo-simple-select-standard-label\">\n                    Category\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-standard-label\"\n                    id=\"categoryId\"\n                    name=\"categoryId\"\n                    value={categoryId}\n                    onChange={handleChange}\n                    label=\"Category\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    {categories.map(category => (\n                      <MenuItem key={category.id} value={category.id}>\n                        {category.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </TableHeader>\n              <TableHeader>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Comment\"\n                  variant=\"standard\"\n                  name=\"comment\"\n                  value={comment}\n                  onChange={handleChange}\n                  sx={{\n                    marginTop: '8px',\n                  }}\n                />\n              </TableHeader>\n              <TableHeader className=\"alignRight\">\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 70 }}>\n                  <InputLabel id=\"demo-simple-select-standard-label\">\n                    Sum\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-standard-label\"\n                    id=\"amount\"\n                    name=\"amount\"\n                    value={amount}\n                    onChange={handleChange}\n                    label=\"Amount\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value=\"low\">To low</MenuItem>\n                    <MenuItem value=\"high\">To high</MenuItem>\n                  </Select>\n                </FormControl>\n              </TableHeader>\n              <TableHeader\n                className=\"alignRight\"\n                style={{ paddingTop: '30px', textAlign: 'center' }}\n              >\n                Balance\n              </TableHeader>\n            </TableHead>\n            {all.length > 0 && categories.length > 0\n              ? all.map(el => (\n                  <TableRow key={el.id}>\n                    <td>\n                      {new Date(el.transactionDate)\n                        .toLocaleDateString()\n                        .replace(/\\//g, '.')}\n                    </td>\n                    <td>{el.amount > 0 ? '+' : '-'}</td>\n                    <td>{categories.find(e => e.id === el.categoryId).name}</td>\n                    <td>{el.comment}</td>\n                    <Sum color={el.amount < 0 ? '#FF6596' : '#24CCA7'}>\n                      {formatMoney(el.amount).replace('-', '')}\n                    </Sum>\n                    <Balance>\n                      {formatMoney(el.balanceAfter).replace('-', '')}\n                    </Balance>\n                  </TableRow>\n                ))\n              : ''}\n          </TableBody>\n        </Table>\n      </MediaQuery>\n    </>\n  );\n}\n","import Media from 'react-media';\nimport { device } from '../../assets/styles/theme';\n\nexport const MediaQuery = ({ deviceName, children }) => {\n  return (\n    <Media queries={device}>\n      {matches => {\n        return matches[deviceName] && children;\n      }}\n    </Media>\n  );\n};\n","export function formatMoney(num) {\n  const arr = Number(num)\n    .toLocaleString('en', {\n      useGrouping: true,\n    })\n    .replace(',', ' ')\n    .split(' ');\n  if (arr[arr.length - 1].includes('.')) {\n    if (arr[arr.length - 1].length > 6) {\n      arr[arr.length - 1] = arr[arr.length - 1].slice(0, 6);\n      return arr.join(' ');\n    }\n    if (arr[arr.length - 1].length === 6) {\n      return arr.join(' ');\n    }\n    if (arr[arr.length - 1].length === 5) {\n      arr[arr.length - 1] = arr[arr.length - 1] + '0';\n      return arr.join(' ');\n    }\n  }\n  arr[arr.length - 1] = arr[arr.length - 1] + '.00';\n  return arr.join(' ');\n}\n"],"names":["selectFilteredTransactions","state","transactions","selectAllTransactions","filteredValues","selectFilteredValue","sortedTransactions","Object","keys","forEach","property","value","filter","transaction","Date","getMonth","Number","toLowerCase","trim","includes","sort","prevTransaction","nextTransaction","TransactionDetails","styled","TransactionDetailsItem","theme","colors","white","props","color","TransactionDetailsItemTitle","fontWeight","bold","SumText","Table","media","desktop","TableBody","TableHead","TableHeader","TableRow","Sum","Balance","months","HomeTab","dispatch","useDispatch","useSelector","all","reverse","categories","selectCategories","filteredValue","transactionDate","amount","comment","type","categoryId","handleChange","e","target","name","MediaQuery","deviceName","length","map","el","i","toLocaleDateString","replace","slice","find","id","formatMoney","balanceAfter","FormControl","variant","sx","m","minWidth","InputLabel","Select","labelId","onChange","label","MenuItem","month","ind","category","TextField","marginTop","className","style","paddingTop","textAlign","children","queries","device","matches","num","arr","toLocaleString","useGrouping","split","join"],"sourceRoot":""}