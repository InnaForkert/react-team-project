{"version":3,"file":"static/js/183.a63932e0.chunk.js","mappings":"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","sources":["assets/icons/all_icons/dropdownArrow.svg","components/Container/Container.styled.jsx","components/CircleChart/CircleChart.styled.jsx","components/CircleChart/CircleChart.jsx","components/StatsTable/StatsTable.styled.jsx","components/StatsTable/StatsTable.jsx","components/Statistics/Statistics.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L10 10L19 1\",\n    stroke: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdownArrow.5b7a0958806e373fe5b54dde6732e652.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: ${({ theme }) => theme.spacing(120)};\n  padding-inline: ${({ theme }) => theme.spacing(5)};\n  margin: 0 auto;\n\n  ${({ theme }) => theme.media.tablet} {\n    max-width: ${({ theme }) => theme.spacing(192)};\n    padding-inline: ${({ theme }) => theme.spacing(8)};\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    max-width: ${({ theme }) => theme.spacing(320)};\n    padding-inline: ${({ theme }) => theme.spacing(4)};\n  }\n`;\n","import styled from 'styled-components';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const StyledDoughnut = styled(Doughnut)`\n  width: 100%;\n  display: flex;\n  flex-direction: column-reverse;\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  display: grid;\n  place-items: center;\n\n  width: 100%;\n  ${({ theme }) => theme.media.mobileFrom} {\n    width: 280px;\n  }\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 336px;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 288px;\n  }\n\n  margin-bottom: 32px;\n`;\n\nexport const ChartLabel = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -40%);\n  z-index: -1;\n\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.md};\n  line-height: calc(27 / 18);\n`;\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategories } from 'redux/transactions/operations';\nimport {\n  selectCategories,\n  selectPeriodTotal,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport {\n  StyledDoughnut,\n  ChartContainer,\n  ChartLabel,\n} from './CircleChart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nChartJS.overrides.doughnut.plugins = {\n  ...ChartJS.overrides.doughnut.plugins,\n  legend: {\n    display: false,\n  },\n};\n\nfunction CircleChart() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategories);\n  const total = useSelector(selectPeriodTotal);\n  const summary = useSelector(selectSummary);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const data = {\n    labels: categories.map(el => el.name),\n    datasets: [\n      {\n        label: '',\n        data: summary.map(el => el.total),\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderWidth: 1,\n      },\n    ],\n    options: {\n      plugins: {\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n      },\n    },\n  };\n\n  return (\n    <ChartContainer>\n      <ChartLabel>â‚´ {total}</ChartLabel>\n      <StyledDoughnut data={data} />\n    </ChartContainer>\n  );\n}\n\nexport default CircleChart;\n","import styled from 'styled-components';\nimport arrow from '../../assets/icons/all_icons/dropdownArrow.svg';\n\nexport const SelectDate = styled.ul`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  overflow: hidden;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding-block: 12px;\n\n  background-color: ${({ theme }) => theme.colors.background};\n  opacity: 0;\n  pointer-events: none;\n\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n\n  transition: opacity 500ms, transform 500ms;\n\n  & li {\n    cursor: pointer;\n    padding-inline: 20px;\n    padding-block: 4px;\n    transition: background-color 200ms;\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.white};\n    }\n  }\n`;\n\nexport const SelectInput = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  width: 100%;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding: 12px 20px 14px;\n\n  background-color: ${({ theme }) => theme.colors.background};\n  cursor: pointer;\n\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: calc(24 / 16);\n\n  transition: border-color 200ms, color 200ms, background-color 200ms;\n\n  &::after {\n    content: url(${arrow});\n    width: 18px;\n    transition: transform 300ms;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      opacity: 1;\n      transform: translateY(calc(100% - 50px));\n    }\n\n    & ${SelectInput} {\n      border-color: transparent;\n      color: transparent;\n      background-color: transparent;\n\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n\nexport const ColorRect = styled.td`\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    background-color: ${props => props.color};\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\nimport {\n  SelectDate,\n  SelectInput,\n  SelectContainer,\n  ColorRect,\n} from './StatsTable.styled';\nimport { selectSummary } from 'redux/transactions/transactionsSlice';\nimport { nanoid } from 'nanoid';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n];\n\nfunction StatsTable() {\n  const dispatch = useDispatch();\n  const summary = useSelector(selectSummary);\n  const [monthDropdownShown, setMonthDropdownShown] = useState(false);\n  const [yearDropdownShown, setYearDropdownShown] = useState(false);\n\n  const now = new Date();\n\n  const [month, setMonth] = useState(now.getMonth());\n  const [year, setYear] = useState(now.getFullYear());\n\n  useEffect(() => {\n    dispatch(fetchTransactionsSummary({ month: +month + 1, year }));\n  }, [dispatch, month, year]);\n\n  function handleMonthChange(e) {\n    setMonth(e.target.dataset.value);\n    toggleMonthDropdown();\n  }\n\n  function handleYearChange(e) {\n    setYear(e.target.dataset.value);\n    toggleYearDropdown();\n  }\n\n  function toggleMonthDropdown() {\n    setMonthDropdownShown(state => !state);\n    setYearDropdownShown(false);\n  }\n\n  function toggleYearDropdown() {\n    setYearDropdownShown(state => !state);\n    setMonthDropdownShown(false);\n  }\n\n  return (\n    <>\n      <SelectContainer className={monthDropdownShown ? 'dropdownShown' : ''}>\n        <SelectInput onClick={toggleMonthDropdown}>{months[month]}</SelectInput>\n        <SelectDate name=\"month\" onClick={handleMonthChange}>\n          <li data-value=\"0\">January</li>\n          <li data-value=\"1\">February</li>\n          <li data-value=\"2\">March</li>\n          <li data-value=\"3\">April</li>\n          <li data-value=\"4\">May</li>\n          <li data-value=\"5\">June</li>\n          <li data-value=\"6\">July</li>\n          <li data-value=\"7\">August</li>\n          <li data-value=\"8\">September</li>\n          <li data-value=\"9\">October</li>\n          <li data-value=\"10\">November</li>\n          <li data-value=\"11\">December</li>\n        </SelectDate>\n      </SelectContainer>\n      <SelectContainer className={yearDropdownShown ? 'dropdownShown' : ''}>\n        <SelectInput onClick={toggleYearDropdown}>{year}</SelectInput>\n        <SelectDate name=\"year\" onClick={handleYearChange}>\n          <li data-value=\"2019\">2019</li>\n          <li data-value=\"2020\">2020</li>\n          <li data-value=\"2021\">2021</li>\n          <li data-value=\"2022\">2022</li>\n          <li data-value=\"2023\">2023</li>\n        </SelectDate>\n      </SelectContainer>\n      <table>\n        <thead>\n          <tr>\n            <th>Category</th>\n            <th>Sum</th>\n          </tr>\n        </thead>\n        {summary.length > 0 ? (\n          <tbody>\n            {summary.map((el, i) => (\n              <tr key={nanoid()}>\n                <ColorRect color={colors[i]}>{el.name}</ColorRect>\n                <td>{el.total}</td>\n              </tr>\n            ))}\n          </tbody>\n        ) : (\n          ''\n        )}\n      </table>\n    </>\n  );\n}\n\nexport default StatsTable;\n","import CircleChart from 'components/CircleChart/CircleChart';\nimport { Container } from 'components/Container/Container.styled';\nimport StatsTable from 'components/StatsTable/StatsTable';\n\nfunction Statistics() {\n  return (\n    <Container>\n      <CircleChart />\n      <StatsTable />\n    </Container>\n  );\n}\n\nexport default Statistics;\n"],"names":["Container","styled","theme","spacing","media","tablet","desktop","StyledDoughnut","Doughnut","ChartContainer","mobileFrom","tabletFrom","ChartLabel","fontWeight","bold","fontSizes","md","ChartJS","ArcElement","Tooltip","Legend","legend","display","dispatch","useDispatch","categories","useSelector","selectCategories","total","selectPeriodTotal","summary","selectSummary","useEffect","fetchCategories","data","labels","map","el","name","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","position","SelectDate","colors","background","fonts","primary","normal","white","SelectInput","arrow","SelectContainer","ColorRect","props","color","months","useState","monthDropdownShown","setMonthDropdownShown","yearDropdownShown","setYearDropdownShown","now","Date","getMonth","month","setMonth","getFullYear","year","setYear","toggleMonthDropdown","state","toggleYearDropdown","fetchTransactionsSummary","className","onClick","e","target","dataset","value","length","i","nanoid"],"sourceRoot":""}