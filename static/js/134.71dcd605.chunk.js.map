{"version":3,"file":"static/js/134.71dcd605.chunk.js","mappings":"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","sources":["assets/icons/all_icons/dropdownArrow.svg","components/MediaQuery/MediaQuery.jsx","components/CircleChart/CircleChart.styled.js","utils/formatMoney.js","components/CircleChart/CircleChart.jsx","components/StatsTable/StatsTable.styled.js","components/StatsTable/StatsTable.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 20 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L10 10L19 1\",\n    stroke: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdownArrow.5b7a0958806e373fe5b54dde6732e652.svg\";\nexport { ForwardRef as ReactComponent };","import Media from 'react-media';\nimport { device } from '../../assets/styles/theme';\n\nexport const MediaQuery = ({ deviceName, children }) => {\n  return (\n    <Media queries={device}>\n      {matches => {\n        return matches[deviceName] && children;\n      }}\n    </Media>\n  );\n};\n","import styled from 'styled-components';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const StyledDoughnut = styled(Doughnut)`\n  width: 100%;\n  display: flex;\n  flex-direction: column-reverse;\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  display: grid;\n  place-items: center;\n\n  width: 100%;\n  ${({ theme }) => theme.media.mobileFrom} {\n    width: 280px;\n    margin-inline: auto;\n  }\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 336px;\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 288px;\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n  }\n\n  margin-bottom: 32px;\n`;\n\nexport const ChartLabel = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: -1;\n\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.md};\n  line-height: calc(27 / 18);\n`;\n","export function formatMoney(num) {\n  const arr = Number(num)\n    .toLocaleString('en', {\n      useGrouping: true,\n    })\n    .replace(',', ' ')\n    .split(' ');\n  if (arr[arr.length - 1].includes('.')) {\n    if (arr[arr.length - 1].length === 2) {\n      return arr.join(' ');\n    }\n    arr[arr.length - 1] = arr[arr.length - 1] + '0';\n    return arr.join(' ');\n  }\n  arr[arr.length - 1] = arr[arr.length - 1] + '.00';\n  return arr.join(' ');\n}\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategories } from 'redux/transactions/operations';\nimport {\n  selectPeriodTotal,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport {\n  StyledDoughnut,\n  ChartContainer,\n  ChartLabel,\n} from './CircleChart.styled';\nimport { formatMoney } from 'utils/formatMoney';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nChartJS.overrides.doughnut.plugins = {\n  ...ChartJS.overrides.doughnut.plugins,\n  legend: {\n    display: false,\n  },\n};\n\nfunction CircleChart() {\n  const dispatch = useDispatch();\n  const total = useSelector(selectPeriodTotal);\n  const summary = useSelector(selectSummary);\n\n  const formattedTotal = formatMoney(total);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n  console.log(summary);\n  const data = {\n    labels: summary.map(el => el.name),\n    datasets: [\n      {\n        data: summary.map(el => el.total),\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderWidth: 0,\n        cutout: '72%',\n      },\n    ],\n    options: {\n      plugins: {\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n      },\n    },\n  };\n\n  return (\n    <ChartContainer>\n      <ChartLabel>₴ {formattedTotal}</ChartLabel>\n      <StyledDoughnut data={data} />\n    </ChartContainer>\n  );\n}\n\nexport default CircleChart;\n","import styled from 'styled-components';\nimport arrow from '../../assets/icons/all_icons/dropdownArrow.svg';\n\nexport const Selects = styled.div`\n  ${({ theme }) => theme.media.tabletFrom} {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  ${({ theme }) => theme.media.tabletFrom} {\n    grid-column: 2 / 3;\n    grid-row: 3 / 4;\n    width: 336px;\n    display: flex;\n    flex-direction: column;\n  }\n  ${({ theme }) => theme.media.desktop} {\n    width: 395px;\n    grid-column: 3 / 4;\n    grid-row: 2 / 5;\n  }\n`;\n\nexport const Summary = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 7px 20px;\n  line-height: calc(24 / 16);\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n\n  &:last-of-type {\n    padding-bottom: 52px;\n  }\n`;\n\nexport const Expense = styled.span`\n  color: ${({ theme }) => theme.colors.accentPink};\n`;\n\nexport const Income = styled.span`\n  color: ${({ theme }) => theme.colors.accentGreen};\n`;\n\nexport const TableHeader = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 16px 20px;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 30px;\n`;\n\nexport const TableBody = styled.tbody`\n  display: block;\n  width: 100%;\n`;\n\nexport const TableRow = styled.tr`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 14px 20px;\n  width: 100%;\n\n  &::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #dcdcdf;\n  }\n`;\n\nexport const TableHead = styled.th`\n  display: block;\n`;\n\nexport const Table = styled.table`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n`;\n\nexport const SelectDate = styled.ul`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n  overflow: hidden;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding-block: 12px;\n\n  background-color: ${({ theme }) => theme.colors.background};\n  opacity: 0;\n  pointer-events: none;\n\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n\n  transition: opacity 500ms, transform 500ms;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    padding: 13px 20px;\n  }\n\n  & li {\n    cursor: pointer;\n    padding-inline: 20px;\n    padding-block: 4px;\n    transition: background-color 200ms;\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.white};\n    }\n  }\n`;\n\nexport const SelectInput = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  width: 100%;\n\n  border-radius: 30px;\n  border: 1px solid black;\n  padding: 12px 20px 14px;\n\n  background-color: ${({ theme }) => theme.colors.background};\n  cursor: pointer;\n\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  line-height: calc(24 / 16);\n\n  transition: border-color 200ms, color 200ms, background-color 200ms;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    padding: 13px 16px;\n  }\n\n  &::after {\n    content: url(${arrow});\n    width: 18px;\n    transition: transform 300ms;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 160px;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 180px;\n  }\n\n  &.dropdownShown {\n    ${SelectDate} {\n      pointer-events: all;\n      opacity: 1;\n      transform: translateY(calc(100% - 50px));\n    }\n\n    & ${SelectInput} {\n      border-color: transparent;\n      color: transparent;\n      background-color: transparent;\n\n      &::after {\n        transform: rotate(180deg);\n        z-index: 2;\n      }\n    }\n  }\n`;\n\nexport const ColorRect = styled.td`\n  display: flex;\n  align-items: center;\n  max-width: 180px;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    border-radius: 2px;\n    margin-right: 16px;\n    background-color: ${props => props.color};\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\nimport {\n  SelectDate,\n  SelectInput,\n  SelectContainer,\n  ColorRect,\n  TableHeader,\n  TableRow,\n  Table,\n  TableHead,\n  TableBody,\n  Summary,\n  Expense,\n  Income,\n  TableContainer,\n  Selects,\n} from './StatsTable.styled';\nimport {\n  selectExpenseSum,\n  selectIncomeSum,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport { nanoid } from 'nanoid';\nimport { formatMoney } from 'utils/formatMoney';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n];\n\nfunction StatsTable() {\n  const summary = useSelector(selectSummary);\n  const expense = useSelector(selectExpenseSum);\n  const income = useSelector(selectIncomeSum);\n  const dispatch = useDispatch();\n  const colored = useRef(summary);\n\n  useEffect(() => {\n    colored.current = summary.map((el, i) => ({\n      ...el,\n      color: colors[i],\n    }));\n    console.log(colored.current);\n  }, [summary, dispatch]);\n\n  const [monthDropdownShown, setMonthDropdownShown] = useState(false);\n  const [yearDropdownShown, setYearDropdownShown] = useState(false);\n\n  const now = new Date();\n\n  const [month, setMonth] = useState(now.getMonth());\n  const [year, setYear] = useState(now.getFullYear());\n\n  useEffect(() => {\n    dispatch(fetchTransactionsSummary({ month: +month + 1, year }));\n  }, [dispatch, month, year]);\n\n  function handleMonthChange(e) {\n    setMonth(e.target.dataset.value);\n    toggleMonthDropdown();\n  }\n\n  function handleYearChange(e) {\n    setYear(e.target.dataset.value);\n    toggleYearDropdown();\n  }\n\n  function toggleMonthDropdown() {\n    setMonthDropdownShown(state => !state);\n    setYearDropdownShown(false);\n  }\n\n  function toggleYearDropdown() {\n    setYearDropdownShown(state => !state);\n    setMonthDropdownShown(false);\n  }\n\n  return (\n    <TableContainer>\n      <Selects>\n        <SelectContainer className={monthDropdownShown ? 'dropdownShown' : ''}>\n          <SelectInput onClick={toggleMonthDropdown}>\n            {months[month]}\n          </SelectInput>\n          <SelectDate name=\"month\" onClick={handleMonthChange}>\n            <li data-value=\"0\">January</li>\n            <li data-value=\"1\">February</li>\n            <li data-value=\"2\">March</li>\n            <li data-value=\"3\">April</li>\n            <li data-value=\"4\">May</li>\n            <li data-value=\"5\">June</li>\n            <li data-value=\"6\">July</li>\n            <li data-value=\"7\">August</li>\n            <li data-value=\"8\">September</li>\n            <li data-value=\"9\">October</li>\n            <li data-value=\"10\">November</li>\n            <li data-value=\"11\">December</li>\n          </SelectDate>\n        </SelectContainer>\n        <SelectContainer className={yearDropdownShown ? 'dropdownShown' : ''}>\n          <SelectInput onClick={toggleYearDropdown}>{year}</SelectInput>\n          <SelectDate name=\"year\" onClick={handleYearChange}>\n            <li data-value=\"2019\">2019</li>\n            <li data-value=\"2020\">2020</li>\n            <li data-value=\"2021\">2021</li>\n            <li data-value=\"2022\">2022</li>\n            <li data-value=\"2023\">2023</li>\n          </SelectDate>\n        </SelectContainer>\n      </Selects>\n      <Table>\n        <TableHead>\n          <TableHeader>\n            <th>Category</th>\n            <th>Sum</th>\n          </TableHeader>\n        </TableHead>\n        {colored.current.length > 0 ? (\n          <TableBody>\n            {colored.current\n              .filter(el => el.total < 0)\n              .map(el => (\n                <TableRow key={nanoid()}>\n                  <ColorRect color={el.color}>{el.name}</ColorRect>\n                  <td>{formatMoney(el.total).replace('-', '')}</td>\n                </TableRow>\n              ))}\n          </TableBody>\n        ) : (\n          ''\n        )}\n      </Table>\n      <Summary>\n        Expenses:<Expense>{formatMoney(expense).replace('-', '')}</Expense>\n      </Summary>\n      <Summary>\n        Income:<Income>{formatMoney(income)}</Income>\n      </Summary>\n    </TableContainer>\n  );\n}\n\nexport default StatsTable;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: ${({ theme }) => theme.fontWeight.normal};\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  margin-bottom: 8px;\n  margin-top: 40px;\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    margin-top: 0;\n    margin-bottom: 20px;\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    margin-top: 40px;\n    grid-column: 2 / 3;\n    grid-row: 1 / 2;\n  }\n`;\n\nexport const TabletStats = styled.div`\n  display: flex;\n  gap: 32px;\n  justify-content: center;\n  align-items: top;\n`;\n","import CircleChart from 'components/CircleChart/CircleChart';\nimport StatsTable from 'components/StatsTable/StatsTable';\nimport { Title, TabletStats } from './Statistics.styled';\nimport { MediaQuery } from 'components/MediaQuery/MediaQuery';\n\nfunction Statistics() {\n  return (\n    <>\n      <MediaQuery deviceName={'mobileAll'}>\n        <Title>Statistics</Title>\n        <CircleChart />\n        <StatsTable />\n      </MediaQuery>\n\n      <MediaQuery deviceName={'tabletFrom'}>\n        <TabletStats>\n          <div>\n            <Title>Statistics</Title>\n            <CircleChart />\n          </div>\n          <StatsTable />\n        </TabletStats>\n      </MediaQuery>\n    </>\n  );\n}\n\nexport default Statistics;\n"],"names":["MediaQuery","deviceName","children","queries","device","matches","StyledDoughnut","styled","Doughnut","ChartContainer","theme","media","mobileFrom","tabletFrom","desktop","ChartLabel","fontWeight","bold","fontSizes","md","formatMoney","num","arr","Number","toLocaleString","useGrouping","replace","split","length","includes","join","ChartJS","ArcElement","Tooltip","Legend","legend","display","dispatch","useDispatch","total","useSelector","selectPeriodTotal","summary","selectSummary","formattedTotal","useEffect","fetchCategories","console","log","data","labels","map","el","name","datasets","backgroundColor","borderWidth","cutout","options","plugins","position","Selects","TableContainer","Summary","Expense","colors","accentPink","Income","accentGreen","TableHeader","white","TableBody","TableRow","TableHead","Table","SelectDate","background","fonts","primary","normal","SelectInput","arrow","SelectContainer","ColorRect","props","color","months","expense","selectExpenseSum","income","selectIncomeSum","colored","useRef","current","i","useState","monthDropdownShown","setMonthDropdownShown","yearDropdownShown","setYearDropdownShown","now","Date","getMonth","month","setMonth","getFullYear","year","setYear","toggleMonthDropdown","state","toggleYearDropdown","fetchTransactionsSummary","className","onClick","e","target","dataset","value","filter","nanoid","Title","secondary","title","TabletStats"],"sourceRoot":""}