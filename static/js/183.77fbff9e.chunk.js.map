{"version":3,"file":"static/js/183.77fbff9e.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/CircleChart/CircleChart.styled.jsx","components/CircleChart/CircleChart.jsx","components/StatsTable/StatsTable.styled.jsx","components/StatsTable/StatsTable.jsx","components/Statistics/Statistics.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: ${({ theme }) => theme.spacing(120)};\n  padding-inline: ${({ theme }) => theme.spacing(5)};\n  margin: 0 auto;\n\n  ${({ theme }) => theme.media.tablet} {\n    max-width: ${({ theme }) => theme.spacing(192)};\n    padding-inline: ${({ theme }) => theme.spacing(8)};\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    max-width: ${({ theme }) => theme.spacing(320)};\n    padding-inline: ${({ theme }) => theme.spacing(4)};\n  }\n`;\n","import styled from 'styled-components';\nimport { Doughnut } from 'react-chartjs-2';\n\nexport const StyledDoughnut = styled(Doughnut)``;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  display: grid;\n  place-items: center;\n\n  width: 100%;\n  ${({ theme }) => theme.media.mobileFrom} {\n    width: 280px;\n  }\n\n  ${({ theme }) => theme.media.tabletFrom} {\n    width: 336px;\n  }\n\n  ${({ theme }) => theme.media.desktop} {\n    width: 288px;\n  }\n`;\n\nexport const ChartLabel = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -40%);\n\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.md};\n  line-height: calc(27 / 18);\n`;\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategories } from 'redux/transactions/operations';\nimport {\n  selectCategories,\n  selectPeriodTotal,\n  selectSummary,\n} from 'redux/transactions/transactionsSlice';\nimport {\n  StyledDoughnut,\n  ChartContainer,\n  ChartLabel,\n} from './CircleChart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction CircleChart() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategories);\n  const total = useSelector(selectPeriodTotal);\n  const summary = useSelector(selectSummary);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const data = {\n    labels: categories,\n    datasets: [\n      {\n        label: '',\n        data: summary.map(el => el.total),\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <ChartContainer>\n      <StyledDoughnut data={data} />\n      <ChartLabel>${total}</ChartLabel>\n    </ChartContainer>\n  );\n}\n\nexport default CircleChart;\n","import styled from 'styled-components';\n\nexport const SelectDate = styled.select``;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\nimport { SelectDate } from './StatsTable.styled';\nimport { selectSummary } from 'redux/transactions/transactionsSlice';\nimport { nanoid } from 'nanoid';\n\nfunction StatsTable() {\n  const dispatch = useDispatch();\n  const summary = useSelector(selectSummary);\n\n  useEffect(() => {\n    dispatch(fetchTransactionsSummary());\n  }, [dispatch]);\n\n  const now = new Date();\n\n  const [month, setMonth] = useState(now.getMonth());\n  const [year, setYear] = useState(now.getFullYear());\n\n  function handleMonthChange(e) {\n    setMonth(e.value);\n    dispatch(fetchTransactionsSummary({ month, year }));\n  }\n\n  function handleYearChange(e) {\n    setYear(e.value);\n    dispatch(fetchTransactionsSummary({ month, year }));\n  }\n\n  return (\n    <>\n      <SelectDate name=\"month\" value={month} onChange={handleMonthChange}>\n        <option value=\"0\">January</option>\n        <option value=\"1\">February</option>\n        <option value=\"2\">March</option>\n        <option value=\"3\">April</option>\n        <option value=\"4\">May</option>\n        <option value=\"5\">June</option>\n        <option value=\"6\">July</option>\n        <option value=\"7\">August</option>\n        <option value=\"8\">September</option>\n        <option value=\"9\">October</option>\n        <option value=\"10\">November</option>\n        <option value=\"11\">December</option>\n      </SelectDate>\n      <SelectDate name=\"year\" value={year} onChange={handleYearChange}>\n        <option value=\"2019\">2019</option>\n        <option value=\"2020\">2020</option>\n        <option value=\"2021\">2021</option>\n        <option value=\"2022\">2022</option>\n        <option value=\"2023\">2023</option>\n      </SelectDate>\n      {/* <TableHeader>Category, Sum</TableHeader> */}\n      <ul>\n        {summary.length > 0\n          ? summary.map(el => (\n              <li key={nanoid()}>\n                {el.name}: {el.total}\n              </li>\n            ))\n          : ''}\n      </ul>\n    </>\n  );\n}\n\nexport default StatsTable;\n","import CircleChart from 'components/CircleChart/CircleChart';\nimport { Container } from 'components/Container/Container.styled';\nimport StatsTable from 'components/StatsTable/StatsTable';\n\nfunction Statistics() {\n  return (\n    <Container>\n      <CircleChart />\n      <StatsTable />\n    </Container>\n  );\n}\n\nexport default Statistics;\n"],"names":["Container","styled","theme","spacing","media","tablet","desktop","StyledDoughnut","Doughnut","ChartContainer","mobileFrom","tabletFrom","ChartLabel","fontWeight","bold","fontSizes","md","ChartJS","ArcElement","Tooltip","Legend","dispatch","useDispatch","categories","useSelector","selectCategories","total","selectPeriodTotal","summary","selectSummary","useEffect","fetchCategories","data","labels","datasets","label","map","el","backgroundColor","borderColor","borderWidth","SelectDate","fetchTransactionsSummary","now","Date","useState","getMonth","month","setMonth","getFullYear","year","setYear","name","value","onChange","e","length","nanoid"],"sourceRoot":""}